{"ast":null,"code":"var _jsxFileName = \"/home/vkalantri/CSCI-620-Project/chess_app/frontend/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  position = 'start',\n  onMove,\n  orientation = 'white'\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess(position));\n  const [boardOrientation, setBoardOrientation] = useState(orientation);\n  const [moveFrom, setMoveFrom] = useState('');\n  const [moveTo, setMoveTo] = useState(null);\n  const [showPromotionDialog, setShowPromotionDialog] = useState(false);\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moveHistory, setMoveHistory] = useState([]);\n\n  // Reset game state when position changes externally\n  useEffect(() => {\n    try {\n      // Update the chess position when the FEN string changes\n      if (position !== 'start' && position !== game.fen()) {\n        const newGame = new Chess(position);\n        setGame(newGame);\n        setMoveHistory(newGame.history({\n          verbose: true\n        }));\n      }\n\n      // Update orientation if it changes\n      if (orientation !== boardOrientation) {\n        setBoardOrientation(orientation);\n      }\n    } catch (error) {\n      console.error('Invalid position:', error);\n    }\n  }, [position, orientation, game, boardOrientation]);\n\n  // Handle the piece move\n  const onDrop = (sourceSquare, targetSquare) => {\n    try {\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q' // always promote to queen for simplicity\n      });\n      if (move === null) return false; // illegal move\n\n      setGame(new Chess(game.fen()));\n      setMoveHistory(game.history({\n        verbose: true\n      }));\n\n      // Highlight squares involved in the move\n      setHighlightedSquares({\n        [sourceSquare]: {\n          backgroundColor: 'rgba(255, 255, 0, 0.4)'\n        },\n        [targetSquare]: {\n          backgroundColor: 'rgba(255, 255, 0, 0.4)'\n        }\n      });\n\n      // Call the onMove callback with the move information\n      if (onMove) {\n        onMove({\n          from: sourceSquare,\n          to: targetSquare,\n          promotion: 'q',\n          fen: game.fen(),\n          san: move.san\n        });\n      }\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: onDrop,\n      boardOrientation: boardOrientation,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n      },\n      customSquareStyles: highlightedSquares,\n      id: \"chess-board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-status\",\n      children: game.isCheckmate() ? 'Checkmate!' : game.isDraw() ? 'Draw!' : game.isCheck() ? 'Check!' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"06Exlh+aqXGaiRJbbTYmaWnUmZY=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBoard","position","onMove","orientation","_s","game","setGame","boardOrientation","setBoardOrientation","moveFrom","setMoveFrom","moveTo","setMoveTo","showPromotionDialog","setShowPromotionDialog","highlightedSquares","setHighlightedSquares","moveHistory","setMoveHistory","fen","newGame","history","verbose","error","console","onDrop","sourceSquare","targetSquare","move","from","to","promotion","backgroundColor","san","className","children","onPieceDrop","customBoardStyle","borderRadius","boxShadow","customSquareStyles","id","fileName","_jsxFileName","lineNumber","columnNumber","isCheckmate","isDraw","isCheck","_c","$RefreshReg$"],"sources":["/home/vkalantri/CSCI-620-Project/chess_app/frontend/src/components/ChessBoard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\n\nconst ChessBoard = ({ position = 'start', onMove, orientation = 'white' }) => {\n  const [game, setGame] = useState(new Chess(position));\n  const [boardOrientation, setBoardOrientation] = useState(orientation);\n  const [moveFrom, setMoveFrom] = useState('');\n  const [moveTo, setMoveTo] = useState(null);\n  const [showPromotionDialog, setShowPromotionDialog] = useState(false);\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moveHistory, setMoveHistory] = useState([]);\n\n  // Reset game state when position changes externally\n  useEffect(() => {\n    try {\n      // Update the chess position when the FEN string changes\n      if (position !== 'start' && position !== game.fen()) {\n        const newGame = new Chess(position);\n        setGame(newGame);\n        setMoveHistory(newGame.history({ verbose: true }));\n      }\n      \n      // Update orientation if it changes\n      if (orientation !== boardOrientation) {\n        setBoardOrientation(orientation);\n      }\n    } catch (error) {\n      console.error('Invalid position:', error);\n    }\n  }, [position, orientation, game, boardOrientation]);\n\n  // Handle the piece move\n  const onDrop = (sourceSquare, targetSquare) => {\n    try {\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q', // always promote to queen for simplicity\n      });\n\n      if (move === null) return false; // illegal move\n\n      setGame(new Chess(game.fen()));\n      setMoveHistory(game.history({ verbose: true }));\n\n      // Highlight squares involved in the move\n      setHighlightedSquares({\n        [sourceSquare]: { backgroundColor: 'rgba(255, 255, 0, 0.4)' },\n        [targetSquare]: { backgroundColor: 'rgba(255, 255, 0, 0.4)' },\n      });\n\n      // Call the onMove callback with the move information\n      if (onMove) {\n        onMove({\n          from: sourceSquare,\n          to: targetSquare,\n          promotion: 'q',\n          fen: game.fen(),\n          san: move.san\n        });\n      }\n      \n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"chess-board\">\n      <Chessboard \n        position={game.fen()} \n        onPieceDrop={onDrop}\n        boardOrientation={boardOrientation}\n        customBoardStyle={{\n          borderRadius: '4px',\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n        }}\n        customSquareStyles={highlightedSquares}\n        id=\"chess-board\"\n      />\n\n      <div className=\"game-status\">\n        {game.isCheckmate() ? 'Checkmate!' : \n          game.isDraw() ? 'Draw!' :\n            game.isCheck() ? 'Check!' : ''}\n      </div>\n    </div>\n  );\n};\n\nexport default ChessBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ,GAAG,OAAO;EAAEC,MAAM;EAAEC,WAAW,GAAG;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAIG,KAAK,CAACK,QAAQ,CAAC,CAAC;EACrD,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAACU,WAAW,CAAC;EACrE,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACoB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACsB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI;MACF;MACA,IAAIO,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAKI,IAAI,CAACc,GAAG,CAAC,CAAC,EAAE;QACnD,MAAMC,OAAO,GAAG,IAAIxB,KAAK,CAACK,QAAQ,CAAC;QACnCK,OAAO,CAACc,OAAO,CAAC;QAChBF,cAAc,CAACE,OAAO,CAACC,OAAO,CAAC;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC,CAAC;MACpD;;MAEA;MACA,IAAInB,WAAW,KAAKI,gBAAgB,EAAE;QACpCC,mBAAmB,CAACL,WAAW,CAAC;MAClC;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC,EAAE,CAACtB,QAAQ,EAAEE,WAAW,EAAEE,IAAI,EAAEE,gBAAgB,CAAC,CAAC;;EAEnD;EACA,MAAMkB,MAAM,GAAGA,CAACC,YAAY,EAAEC,YAAY,KAAK;IAC7C,IAAI;MACF,MAAMC,IAAI,GAAGvB,IAAI,CAACuB,IAAI,CAAC;QACrBC,IAAI,EAAEH,YAAY;QAClBI,EAAE,EAAEH,YAAY;QAChBI,SAAS,EAAE,GAAG,CAAE;MAClB,CAAC,CAAC;MAEF,IAAIH,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC,CAAC;;MAEjCtB,OAAO,CAAC,IAAIV,KAAK,CAACS,IAAI,CAACc,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9BD,cAAc,CAACb,IAAI,CAACgB,OAAO,CAAC;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC;;MAE/C;MACAN,qBAAqB,CAAC;QACpB,CAACU,YAAY,GAAG;UAAEM,eAAe,EAAE;QAAyB,CAAC;QAC7D,CAACL,YAAY,GAAG;UAAEK,eAAe,EAAE;QAAyB;MAC9D,CAAC,CAAC;;MAEF;MACA,IAAI9B,MAAM,EAAE;QACVA,MAAM,CAAC;UACL2B,IAAI,EAAEH,YAAY;UAClBI,EAAE,EAAEH,YAAY;UAChBI,SAAS,EAAE,GAAG;UACdZ,GAAG,EAAEd,IAAI,CAACc,GAAG,CAAC,CAAC;UACfc,GAAG,EAAEL,IAAI,CAACK;QACZ,CAAC,CAAC;MACJ;MAEA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOV,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF,CAAC;EAED,oBACExB,OAAA;IAAKmC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BpC,OAAA,CAACF,UAAU;MACTI,QAAQ,EAAEI,IAAI,CAACc,GAAG,CAAC,CAAE;MACrBiB,WAAW,EAAEX,MAAO;MACpBlB,gBAAgB,EAAEA,gBAAiB;MACnC8B,gBAAgB,EAAE;QAChBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE;MACb,CAAE;MACFC,kBAAkB,EAAEzB,kBAAmB;MACvC0B,EAAE,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAEF9C,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzB9B,IAAI,CAACyC,WAAW,CAAC,CAAC,GAAG,YAAY,GAChCzC,IAAI,CAAC0C,MAAM,CAAC,CAAC,GAAG,OAAO,GACrB1C,IAAI,CAAC2C,OAAO,CAAC,CAAC,GAAG,QAAQ,GAAG;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CAtFIJ,UAAU;AAAAiD,EAAA,GAAVjD,UAAU;AAwFhB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}