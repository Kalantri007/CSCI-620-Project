{"ast":null,"code":"var _jsxFileName = \"/home/vkalantri/CSCI-620-Project/chess_app/frontend/src/pages/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ChessBoard from '../components/ChessBoard';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const [gameData, setGameData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userColor, setUserColor] = useState('white');\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameStatus, setGameStatus] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [opponentUsername, setOpponentUsername] = useState('');\n  const navigate = useNavigate();\n  const websocket = useRef(null);\n  useEffect(() => {\n    // Function to fetch game data from the backend\n    const fetchGameData = async () => {\n      try {\n        const data = await api.getGame(gameId);\n        setGameData(data);\n        setMoveHistory(data.moves);\n\n        // Determine user's color and opponent\n        const currentUser = localStorage.getItem('username');\n        if (currentUser === data.white_player.username) {\n          setUserColor('white');\n          setOpponentUsername(data.black_player.username);\n        } else {\n          setUserColor('black');\n          setOpponentUsername(data.white_player.username);\n        }\n\n        // Set game status\n        setGameStatus(data.status);\n        updateStatusMessage(data.status, data.result);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message || 'An error occurred while loading the game');\n        setLoading(false);\n      }\n    };\n    fetchGameData();\n\n    // Set up WebSocket connection for real-time game updates\n    const wsScheme = window.location.protocol === 'https:' ? 'wss://' : 'ws://';\n    const gameSocket = new WebSocket(`${wsScheme}${window.location.host}/ws/game/${gameId}/`);\n    gameSocket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    gameSocket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'move') {\n        // Update game state with new move\n        const updatedGameData = {\n          ...gameData\n        };\n        updatedGameData.fen = data.fen;\n        updatedGameData.moves = [...updatedGameData.moves, data.move];\n        setGameData(updatedGameData);\n        setMoveHistory(updatedGameData.moves);\n      } else if (data.type === 'game_update') {\n        // Update entire game state\n        setGameData(data.game);\n        setMoveHistory(data.game.moves);\n        updateStatusMessage(data.game.status, data.game.result);\n      } else if (data.type === 'chat_message') {\n        // Handle chat messages if we implement a chat feature later\n      }\n    };\n    gameSocket.onclose = e => {\n      console.warn('WebSocket connection closed:', e);\n    };\n    gameSocket.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('Connection error. Please try refreshing the page.');\n    };\n\n    // Store the websocket reference\n    websocket.current = gameSocket;\n\n    // Clean up function\n    return () => {\n      if (websocket.current && websocket.current.readyState === WebSocket.OPEN) {\n        websocket.current.close();\n      }\n    };\n  }, [gameId]);\n  const updateStatusMessage = (status, result) => {\n    if (status === 'finished') {\n      if (result === 'white_win') {\n        setStatusMessage('White wins!');\n      } else if (result === 'black_win') {\n        setStatusMessage('Black wins!');\n      } else if (result === 'draw') {\n        setStatusMessage('Game ended in a draw');\n      }\n    } else if (status === 'active') {\n      setStatusMessage('Game in progress');\n    } else {\n      setStatusMessage('Waiting for players');\n    }\n  };\n  const handleMove = async move => {\n    try {\n      // Send move to the backend via API\n      await api.makeMove(gameId, move);\n\n      // No need to update UI here as the WebSocket will handle that\n    } catch (err) {\n      setError('Failed to submit move. Please try again.');\n      console.error(err);\n    }\n  };\n  const handleResign = async () => {\n    if (window.confirm('Are you sure you want to resign this game?')) {\n      try {\n        await api.resignGame(gameId);\n        // WebSocket will handle the game status update\n      } catch (err) {\n        setError('Failed to resign. Please try again.');\n        console.error(err);\n      }\n    }\n  };\n  const handleGoToHome = () => {\n    navigate('/');\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading game...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 21\n  }, this);\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: \"Game not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chess Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"players-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"White:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), \" \", gameData.white_player.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Black:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), \" \", gameData.black_player.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), gameData.status === 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-turn\",\n            children: gameData.fen.split(' ')[1] === 'w' ? \"White's turn\" : \"Black's turn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board-container\",\n      children: /*#__PURE__*/_jsxDEV(ChessBoard, {\n        position: gameData.fen,\n        onMove: handleMove,\n        orientation: userColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [gameData.status === 'active' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resign-button\",\n        onClick: handleResign,\n        children: \"Resign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-button\",\n        onClick: handleGoToHome,\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-list\",\n        children: moveHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: move.move_notation\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No moves yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"dyh+s2YpXz4L2RLIrMrTC+fkqCY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","ChessBoard","api","jsxDEV","_jsxDEV","GamePage","_s","gameId","gameData","setGameData","loading","setLoading","error","setError","userColor","setUserColor","moveHistory","setMoveHistory","gameStatus","setGameStatus","statusMessage","setStatusMessage","opponentUsername","setOpponentUsername","navigate","websocket","fetchGameData","data","getGame","moves","currentUser","localStorage","getItem","white_player","username","black_player","status","updateStatusMessage","result","err","message","wsScheme","window","location","protocol","gameSocket","WebSocket","host","onopen","console","log","onmessage","e","JSON","parse","type","updatedGameData","fen","move","game","onclose","warn","onerror","current","readyState","OPEN","close","handleMove","makeMove","handleResign","confirm","resignGame","handleGoToHome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","position","onMove","orientation","onClick","length","map","index","move_notation","_c","$RefreshReg$"],"sources":["/home/vkalantri/CSCI-620-Project/chess_app/frontend/src/pages/GamePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ChessBoard from '../components/ChessBoard';\nimport api from '../services/api';\n\nconst GamePage = () => {\n  const { gameId } = useParams();\n  const [gameData, setGameData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userColor, setUserColor] = useState('white');\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameStatus, setGameStatus] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [opponentUsername, setOpponentUsername] = useState('');\n\n  const navigate = useNavigate();\n  const websocket = useRef(null);\n\n  useEffect(() => {\n    // Function to fetch game data from the backend\n    const fetchGameData = async () => {\n      try {\n        const data = await api.getGame(gameId);\n        setGameData(data);\n        setMoveHistory(data.moves);\n        \n        // Determine user's color and opponent\n        const currentUser = localStorage.getItem('username');\n        if (currentUser === data.white_player.username) {\n          setUserColor('white');\n          setOpponentUsername(data.black_player.username);\n        } else {\n          setUserColor('black');\n          setOpponentUsername(data.white_player.username);\n        }\n\n        // Set game status\n        setGameStatus(data.status);\n        updateStatusMessage(data.status, data.result);\n        \n        setLoading(false);\n      } catch (err) {\n        setError(err.message || 'An error occurred while loading the game');\n        setLoading(false);\n      }\n    };\n\n    fetchGameData();\n\n    // Set up WebSocket connection for real-time game updates\n    const wsScheme = window.location.protocol === 'https:' ? 'wss://' : 'ws://';\n    const gameSocket = new WebSocket(\n      `${wsScheme}${window.location.host}/ws/game/${gameId}/`\n    );\n\n    gameSocket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n\n    gameSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      \n      if (data.type === 'move') {\n        // Update game state with new move\n        const updatedGameData = { ...gameData };\n        updatedGameData.fen = data.fen;\n        updatedGameData.moves = [...updatedGameData.moves, data.move];\n        setGameData(updatedGameData);\n        setMoveHistory(updatedGameData.moves);\n      } else if (data.type === 'game_update') {\n        // Update entire game state\n        setGameData(data.game);\n        setMoveHistory(data.game.moves);\n        updateStatusMessage(data.game.status, data.game.result);\n      } else if (data.type === 'chat_message') {\n        // Handle chat messages if we implement a chat feature later\n      }\n    };\n\n    gameSocket.onclose = (e) => {\n      console.warn('WebSocket connection closed:', e);\n    };\n\n    gameSocket.onerror = (err) => {\n      console.error('WebSocket error:', err);\n      setError('Connection error. Please try refreshing the page.');\n    };\n\n    // Store the websocket reference\n    websocket.current = gameSocket;\n\n    // Clean up function\n    return () => {\n      if (websocket.current && websocket.current.readyState === WebSocket.OPEN) {\n        websocket.current.close();\n      }\n    };\n  }, [gameId]);\n\n  const updateStatusMessage = (status, result) => {\n    if (status === 'finished') {\n      if (result === 'white_win') {\n        setStatusMessage('White wins!');\n      } else if (result === 'black_win') {\n        setStatusMessage('Black wins!');\n      } else if (result === 'draw') {\n        setStatusMessage('Game ended in a draw');\n      }\n    } else if (status === 'active') {\n      setStatusMessage('Game in progress');\n    } else {\n      setStatusMessage('Waiting for players');\n    }\n  };\n\n  const handleMove = async (move) => {\n    try {\n      // Send move to the backend via API\n      await api.makeMove(gameId, move);\n      \n      // No need to update UI here as the WebSocket will handle that\n    } catch (err) {\n      setError('Failed to submit move. Please try again.');\n      console.error(err);\n    }\n  };\n\n  const handleResign = async () => {\n    if (window.confirm('Are you sure you want to resign this game?')) {\n      try {\n        await api.resignGame(gameId);\n        // WebSocket will handle the game status update\n      } catch (err) {\n        setError('Failed to resign. Please try again.');\n        console.error(err);\n      }\n    }\n  };\n\n  const handleGoToHome = () => {\n    navigate('/');\n  };\n\n  if (loading) return <div className=\"loading\">Loading game...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (!gameData) return <div className=\"error-message\">Game not found</div>;\n\n  return (\n    <div className=\"game-page\">\n      <div className=\"game-header\">\n        <h1>Chess Game</h1>\n        <div className=\"game-info\">\n          <div className=\"players-info\">\n            <div className=\"player-info\">\n              <strong>White:</strong> {gameData.white_player.username}\n            </div>\n            <div className=\"player-info\">\n              <strong>Black:</strong> {gameData.black_player.username}\n            </div>\n          </div>\n          <div className=\"status-info\">\n            <div className=\"game-status\">{statusMessage}</div>\n            {gameData.status === 'active' && (\n              <div className=\"current-turn\">\n                {gameData.fen.split(' ')[1] === 'w' ? \"White's turn\" : \"Black's turn\"}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"game-board-container\">\n        <ChessBoard \n          position={gameData.fen}\n          onMove={handleMove}\n          orientation={userColor}\n        />\n      </div>\n      \n      <div className=\"game-controls\">\n        {gameData.status === 'active' && (\n          <button className=\"resign-button\" onClick={handleResign}>Resign</button>\n        )}\n        <button className=\"home-button\" onClick={handleGoToHome}>Back to Home</button>\n      </div>\n      \n      <div className=\"game-history\">\n        <h3>Move History</h3>\n        <div className=\"move-list\">\n          {moveHistory.length > 0 ? (\n            <ol>\n              {moveHistory.map((move, index) => (\n                <li key={index}>{move.move_notation}</li>\n              ))}\n            </ol>\n          ) : (\n            <p>No moves yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}