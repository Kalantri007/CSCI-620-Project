{"ast":null,"code":"// API service to handle communication with the backend\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.indexOf('application/json') !== -1) {\n    if (response.ok) {\n      return await response.json();\n    }\n    const error = await response.json();\n    return Promise.reject(error);\n  }\n  if (!response.ok) {\n    return Promise.reject(new Error(`HTTP error! Status: ${response.status}`));\n  }\n  return await response.text();\n};\n\n// Function to get auth token from local storage\nconst getAuthToken = () => localStorage.getItem('authToken');\n\n// Function to get auth headers\nconst getAuthHeaders = () => {\n  const token = getAuthToken();\n  return token ? {\n    'Authorization': `Token ${token}`\n  } : {};\n};\n\n// API methods\nconst api = {\n  // Authentication\n  login: async credentials => {\n    const response = await fetch('/api/auth/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await handleResponse(response);\n\n    // Store username along with token\n    if (data.token) {\n      localStorage.setItem('authToken', data.token);\n      localStorage.setItem('username', credentials.username);\n    }\n    return data;\n  },\n  register: async userData => {\n    const response = await fetch('/api/auth/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return handleResponse(response);\n  },\n  logout: async () => {\n    const token = getAuthToken();\n    if (!token) return Promise.resolve();\n    const response = await fetch('/api/auth/logout/', {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('username');\n    return handleResponse(response);\n  },\n  // User Management\n  getUsers: async () => {\n    const response = await fetch('/api/accounts/users/', {\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  getUserProfile: async () => {\n    const response = await fetch('/api/accounts/profile/', {\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  // Games\n  getGames: async () => {\n    const response = await fetch('/api/games/', {\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  getGame: async gameId => {\n    const response = await fetch(`/api/games/${gameId}/`, {\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  createGame: async gameData => {\n    const response = await fetch('/api/games/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(gameData)\n    });\n    return handleResponse(response);\n  },\n  makeMove: async (gameId, move) => {\n    const response = await fetch(`/api/games/${gameId}/move/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(move)\n    });\n    return handleResponse(response);\n  },\n  resignGame: async gameId => {\n    const response = await fetch(`/api/games/${gameId}/resign/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  // Game Invitations\n  getInvitations: async () => {\n    const response = await fetch('/api/invitations/', {\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  createInvitation: async invitationData => {\n    const response = await fetch('/api/invitations/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(invitationData)\n    });\n    return handleResponse(response);\n  },\n  acceptInvitation: async invitationId => {\n    const response = await fetch(`/api/invitations/${invitationId}/accept/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  },\n  declineInvitation: async invitationId => {\n    const response = await fetch(`/api/invitations/${invitationId}/decline/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      }\n    });\n    return handleResponse(response);\n  }\n};\nexport default api;","map":{"version":3,"names":["handleResponse","response","contentType","headers","get","indexOf","ok","json","error","Promise","reject","Error","status","text","getAuthToken","localStorage","getItem","getAuthHeaders","token","api","login","credentials","fetch","method","body","JSON","stringify","data","setItem","username","register","userData","logout","resolve","removeItem","getUsers","getUserProfile","getGames","getGame","gameId","createGame","gameData","makeMove","move","resignGame","getInvitations","createInvitation","invitationData","acceptInvitation","invitationId","declineInvitation"],"sources":["/home/vkalantri/CSCI-620-Project/chess_app/frontend/src/services/api.js"],"sourcesContent":["// API service to handle communication with the backend\n\n// Helper function to handle API responses\nconst handleResponse = async (response) => {\n  const contentType = response.headers.get('content-type');\n  \n  if (contentType && contentType.indexOf('application/json') !== -1) {\n    if (response.ok) {\n      return await response.json();\n    }\n    \n    const error = await response.json();\n    return Promise.reject(error);\n  }\n  \n  if (!response.ok) {\n    return Promise.reject(new Error(`HTTP error! Status: ${response.status}`));\n  }\n  \n  return await response.text();\n};\n\n// Function to get auth token from local storage\nconst getAuthToken = () => localStorage.getItem('authToken');\n\n// Function to get auth headers\nconst getAuthHeaders = () => {\n  const token = getAuthToken();\n  return token ? { 'Authorization': `Token ${token}` } : {};\n};\n\n// API methods\nconst api = {\n  // Authentication\n  login: async (credentials) => {\n    const response = await fetch('/api/auth/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    });\n    \n    const data = await handleResponse(response);\n    \n    // Store username along with token\n    if (data.token) {\n      localStorage.setItem('authToken', data.token);\n      localStorage.setItem('username', credentials.username);\n    }\n    \n    return data;\n  },\n  \n  register: async (userData) => {\n    const response = await fetch('/api/auth/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n    return handleResponse(response);\n  },\n  \n  logout: async () => {\n    const token = getAuthToken();\n    if (!token) return Promise.resolve();\n    \n    const response = await fetch('/api/auth/logout/', {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('username');\n    return handleResponse(response);\n  },\n  \n  // User Management\n  getUsers: async () => {\n    const response = await fetch('/api/accounts/users/', {\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  getUserProfile: async () => {\n    const response = await fetch('/api/accounts/profile/', {\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  // Games\n  getGames: async () => {\n    const response = await fetch('/api/games/', {\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  getGame: async (gameId) => {\n    const response = await fetch(`/api/games/${gameId}/`, {\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  createGame: async (gameData) => {\n    const response = await fetch('/api/games/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(gameData),\n    });\n    return handleResponse(response);\n  },\n  \n  makeMove: async (gameId, move) => {\n    const response = await fetch(`/api/games/${gameId}/move/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(move),\n    });\n    return handleResponse(response);\n  },\n  \n  resignGame: async (gameId) => {\n    const response = await fetch(`/api/games/${gameId}/resign/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  // Game Invitations\n  getInvitations: async () => {\n    const response = await fetch('/api/invitations/', {\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  createInvitation: async (invitationData) => {\n    const response = await fetch('/api/invitations/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify(invitationData),\n    });\n    return handleResponse(response);\n  },\n  \n  acceptInvitation: async (invitationId) => {\n    const response = await fetch(`/api/invitations/${invitationId}/accept/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  },\n  \n  declineInvitation: async (invitationId) => {\n    const response = await fetch(`/api/invitations/${invitationId}/decline/`, {\n      method: 'POST',\n      headers: {\n        ...getAuthHeaders()\n      },\n    });\n    return handleResponse(response);\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}